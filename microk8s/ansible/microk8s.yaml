---
- name: "Server configuration"
  hosts: "all"
  become: true
  tasks:
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Install microk8s
      snap:
        name: microk8s
        classic: true
    - name: Add user to group microk8s
      ansible.builtin.shell: |
        usermod -a -G microk8s vagrant
        echo "alias kubectl='microk8s.kubectl'" >> /home/vagrant/.bash_aliases
        chown vagrant:vagrant /home/vagrant/.bash_aliases
        echo "alias kubectl='microk8s.kubectl'" >> /root/.bash_aliases
        chown root:root /root/.bash_aliases
    - name: Shutdown microk8s
      ansible.builtin.shell: |
        snap stop microk8s
    - name: change IP kube-apiserver
      ansible.builtin.shell: |
        echo --advertise-address={{privateIp}} >> /var/snap/microk8s/current/args/kube-apiserver
    - name: change IP kubelet
      ansible.builtin.shell: |
        echo --node-ip={{privateIp}} >> /var/snap/microk8s/current/args/kubelet
    - name: change IP NodePort services
      ansible.builtin.shell: |
        #echo --nodeport-addresses={{privateIp}} >> /var/snap/microk8s/current/args/kube-proxy
    - name: Start microk8s
      ansible.builtin.shell: |
        snap start microk8s
    - name: Wait status microk8s
      ansible.builtin.shell: |
        microk8s status --wait-ready
    - name: "Update calico"
      ansible.builtin.shell: |
        # microk8s kubectl apply -f /vagrant/cni.yaml
    - name: Update certs microk8s
      ansible.builtin.shell: |
        microk8s refresh-certs
      ignore_errors: true